<!-- include header -->
<%- include('include/_adminHeader') %>
<!-- /include header -->

<div id="mainContent">
  <input type="hidden" id="userEmails" value="<%=
  JSON.stringify(userEmails).replace("[", "").replace("]",
  "").replaceAll('"',"") %>" /> <input type="hidden" id="ordersPerUser"
  value="<%= JSON.stringify(ordersPerUser).replace("[", "").replace("]", "") %>"
  /> <input type="hidden" id="revenuePerUser" value="<%=
  JSON.stringify(revenuePerUser).replace("[", "").replace("]", "") %>" /> <input
  type="hidden" id="ingredientNames"
  value="<%=JSON.stringify(ingredientNames).replace("[", "").replace("]",
  "").replaceAll('"',"")%>" /> <input type="hidden" id="ordersPerIngredient"
  value="<%= JSON.stringify(ordersPerIngredient).replace("[", "").replace("]",
  "") %>" /> <input type="hidden" id="ordersPerHour" value="<%=
  JSON.stringify(ordersPerHour).replace("[", "").replace("]", "") %>" /> <input
  type="hidden" id="revenuePerHour" value="<%=
  JSON.stringify(revenuePerHour).replace("[", "").replace("]", "") %>" /> <input
  type="hidden" id="averageTimerPerHour" value="<%=
  JSON.stringify(averageTimerPerHour).replace("[", "").replace("]", "") %>" />
  <input type="hidden" id="averageTimer" value="<%=
  JSON.stringify(averageTimer).replace("[", "").replace("]", "") %>" /> <input
  type="hidden" id="averageDeliveryTimePerPerson" value="<%=
  JSON.stringify(averageDeliveryTimePerPerson).replace("[", "").replace("]", "")
  %>" /> <input type="hidden" id="delivererNames" value="<%=
  JSON.stringify(delivererNames).replace("[", "").replace("]", "") %>" />
  <input type="submit" id="delete-all" value="DELETE ALL DATA" />
  <input type="submit" id="delete-dev" value="DELETE ALL DEV ORDERS" />
  <div class="charts">
    <canvas id="ingredientsChartCanvas" width="1980" height="800"></canvas>
    <h6>Total orders per hour:</h6>
    <canvas id="ordersPerHourCanvas" width="1980" height="800"></canvas>
    <h6>Total revenue per hour:</h6>
    <canvas id="revenuePerHourCanvas" width="1980" height="800"></canvas>
    <h6>Average barista completion time: <%=Math.round(averageTimer)%>(s)</h6>
    <h6>Average barista completion time per hour:</h6>
    <canvas id="averageTimerPerHourCanvas" width="1980" height="800"></canvas>
  </div>
  <h1>Metrics Per Menu Item:</h1>
  <div>
    <table>
      <thead>
        <tr>
          <th id="sortNeither" class="menuItemTable"><b>Menu Item</b></th>
          <th id="sortNeither" class="menuItemTable"><b>Orders</b></th>
          <th id="sortNeither" class="menuItemTable"><b>Revenue</b></th>
        </tr>
      </thead>
      <tbody id="menuItemTable">
        <% for(let i = 0; i < menuItemNames.length; i++) { %>
        <tr>
          <td><%=menuItemNames[i]%></td>
          <td><%=ordersPerMenuItem[i]%></td>
          <td>$<%=revenuePerMenuItem[i]%></td>
        </tr>
        <%}%>
      </tbody>

      <thead>
        <tr>
          <th><b>Total</b></th>
          <th><b><%=totalDrinkOrdersNum%></b></th>
          <th><b>$<%=totalRevenue%></b></th>
        </tr>
      </thead>
    </table>
  </div>
  <h1>Metrics Per User:</h1>
  <div>
    <table>
      <thead>
        <tr>
          <th id="sortNeither" class="userTable"><b>User</b></th>
          <th id="sortNeither" class="userTable"><b>Orders</b></th>
          <th id="sortNeither" class="userTable"><b>Revenue</b></th>
        </tr>
      </thead>

      <tbody id="userTable">
        <% for(let i = 0; i < userEmails.length; i++) { %>
        <tr>
          <td><%=userEmails[i]%></td>
          <td><%=ordersPerUser[i]%></td>
          <td>$<%=revenuePerUser[i]%></td>
        </tr>
        <%}%>
      </tbody>

      <thead>
        <tr>
          <th><b>Total</b></th>
          <th><b><%=totalOrdersNum%></b></th>
          <th><b>$<%=totalRevenue%></b></th>
        </tr>
      </thead>
    </table>
    <table>
      <thead>
        <tr>
          <th id="sortNeither" class="deliveryTable"><b>Delivery Person</b></th>
          <th id="sortNeither" class="deliveryTable">
            <b>Avg. Delivery Time (s)</b>
          </th>
        </tr>
      </thead>

      <tbody id="deliveryTable">
        <% for(let i = 0; i < delivererNames.length; i++) { %>
        <tr>
          <td><%=delivererNames[i]%></td>
          <td><%=averageDeliveryTimePerPerson[i]%></td>
        </tr>
        <%}%>
      </tbody>
    </table>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
  const deleteButton = document.getElementById("delete-all");
  deleteButton.addEventListener("click", async () => {
    if (!confirm("Are you sure you want to delete all data?")) {
      return;
    }
    const response = await fetch("/admin/wipeOrders", {
      method: "DELETE",
    });
    if (response.ok) {
      alert("All data has been deleted.");
      location.reload();
    } else {
      alert("Failed to delete data.");
    }
  });
  const deleteDevButton = document.getElementById("delete-dev");
  deleteDevButton.addEventListener("click", async () => {
    if (!confirm("Are you sure you want to delete all dev orders?")) {
      return;
    }
    const response = await fetch("/admin/wipeDevOrders", {
      method: "DELETE",
    });
    if (response.ok) {
      alert("All dev orders have been deleted.");
      location.reload();
    } else {
      alert("Failed to delete dev orders.");
    }
  });
  const getCellValue = (tr, idx) =>
    tr.children[idx].innerText || tr.children[idx].textContent;

  const comparer = (idx, asc) => (a, b) =>
    ((v1, v2) =>
      v1 !== "" && v2 !== "" && !isNaN(v1) && !isNaN(v2)
        ? v1 - v2
        : v1[0] === "$"
        ? Number(v1.substring(1)) - Number(v2.substring(1))
        : v2.toString().localeCompare(v1))(
      getCellValue(asc ? a : b, idx),
      getCellValue(asc ? b : a, idx)
    );
  document.querySelectorAll("th.deliveryTable").forEach((th) =>
    th.addEventListener("click", () => {
      th.id =
        th.id === "sortNeither"
          ? "sortDown"
          : th.id === "sortDown"
          ? "sortUp"
          : "sortDown";
      document.querySelectorAll("th.deliveryTable").forEach((th2) => {
        if (th !== th2) {
          th2.id = "sortNeither";
        }
      });
      const table = document.getElementById("deliveryTable");
      Array.from(table.querySelectorAll("tr"))
        .sort(
          comparer(
            Array.from(th.parentNode.children).indexOf(th),
            (this.asc = th.id === "sortUp")
          )
        )
        .forEach((tr) => table.appendChild(tr));
    })
  );
  document.querySelectorAll("th.userTable").forEach((th) =>
    th.addEventListener("click", () => {
      th.id =
        th.id === "sortNeither"
          ? "sortDown"
          : th.id === "sortDown"
          ? "sortUp"
          : "sortDown";
      document.querySelectorAll("th.userTable").forEach((th2) => {
        if (th !== th2) {
          th2.id = "sortNeither";
        }
      });
      const table = document.getElementById("userTable");
      Array.from(table.querySelectorAll("tr"))
        .sort(
          comparer(
            Array.from(th.parentNode.children).indexOf(th),
            (this.asc = th.id === "sortUp")
          )
        )
        .forEach((tr) => table.appendChild(tr));
    })
  );
  document.querySelectorAll("th.menuItemTable").forEach((th) =>
    th.addEventListener("click", () => {
      th.id =
        th.id === "sortNeither"
          ? "sortDown"
          : th.id === "sortDown"
          ? "sortUp"
          : "sortDown";
      document.querySelectorAll("th.menuItemTable").forEach((th2) => {
        if (th !== th2) {
          th2.id = "sortNeither";
        }
      });
      const table = document.getElementById("menuItemTable");
      Array.from(table.querySelectorAll("tr"))
        .sort(
          comparer(
            Array.from(th.parentNode.children).indexOf(th),
            (this.asc = th.id === "sortUp")
          )
        )
        .forEach((tr) => table.appendChild(tr));
    })
  );

  const ingredientNames = document
    .getElementById("ingredientNames")
    .value.split(",");
  const ordersPerIngredient = document
    .getElementById("ordersPerIngredient")
    .value.split(",");

  const hours = [
    "12am",
    "1am",
    "2am",
    "3am",
    "4am",
    "5am",
    "6am",
    "7am",
    "8am",
    "9am",
    "10am",
    "11am",
    "12pm",
    "1pm",
    "2pm",
    "3pm",
    "4pm",
    "5pm",
    "6pm",
    "7pm",
    "8pm",
    "9pm",
    "10pm",
    "11pm",
  ];
  const ordersPerHour = document
    .getElementById("ordersPerHour")
    .value.split(",");
  const revenuePerHour = document
    .getElementById("revenuePerHour")
    .value.split(",");

  const averageTimerPerHour = document
    .getElementById("averageTimerPerHour")
    .value.split(",");
  const averageTimer = document.getElementById("averageTimer").value;

  document.addEventListener("DOMContentLoaded", () => {
    const ingredientsChartCanvas = document.getElementById(
      "ingredientsChartCanvas"
    );

    let ingredientsChart = new Chart(ingredientsChartCanvas, {
      type: "bar",
      data: {
        labels: ingredientNames,
        datasets: [
          {
            label: "Orders Per Ingredient",
            data: ordersPerIngredient,
            backgroundColor: "rgba(75, 192, 192, 0.2)",
            borderColor: "rgba(75, 192, 192, 1)",
            borderWidth: 1,
          },
        ],
      },
    });

    ingredientsChartCanvas.style.width = "100%";
    ingredientsChartCanvas.style.height = "800px";
    const ordersPerHourCanvas = document.getElementById("ordersPerHourCanvas");
    let ordersPerHourChart = new Chart(ordersPerHourCanvas, {
      type: "bar",
      data: {
        labels: hours,
        datasets: [
          {
            label: "Total Orders Per Hour",
            data: ordersPerHour,
            backgroundColor: "rgba(75, 192, 192, 0.2)",
            borderColor: "rgba(75, 192, 192, 1)",
            borderWidth: 1,
          },
        ],
      },
    });
    ordersPerHourCanvas.style.width = "100%";
    ordersPerHourCanvas.style.height = "800px";

    let revenuePerHourChart = new Chart(
      document.getElementById("revenuePerHourCanvas"),
      {
        type: "bar",
        data: {
          labels: hours,
          datasets: [
            {
              label: "Total Revenue Per Hour",
              data: revenuePerHour,
              backgroundColor: "rgba(75, 192, 192, 0.2)",
              borderColor: "rgba(75, 192, 192, 1)",
              borderWidth: 1,
            },
          ],
        },
      }
    );
    revenuePerHourCanvas.style.width = "100%";
    revenuePerHourCanvas.style.height = "800px";

    let averageTimerPerHourChart = new Chart(
      document.getElementById("averageTimerPerHourCanvas"),
      {
        type: "bar",
        data: {
          labels: hours,
          datasets: [
            {
              label: "Average Order Completion Time Per Hour (seconds)",
              data: averageTimerPerHour,
              backgroundColor: "rgba(75, 192, 192, 0.2)",
              borderColor: "rgba(75, 192, 192, 1)",
              borderWidth: 1,
            },
          ],
        },
      }
    );
    averageTimerPerHourCanvas.style.width = "100%";
    averageTimerPerHourCanvas.style.height = "800px";
  });
</script>

<style>
  table td,
  table th {
    border: 1px solid silver;
    color: #1a1a1a;
  }
  h6 {
    color: #ff582c;
  }
  #sortNeither:after,
  #sortDown:after,
  #sortUp:after {
    content: " ";
    position: relative;
    left: 2px;
    border: 8px solid transparent;
  }

  #sortNeither:after,
  #sortDown:after {
    border-top-color: silver;
  }

  #sortNeither:after,
  #sortUp:after {
    border-bottom-color: silver;
  }

  #sortNeither,
  #sortDown,
  #sortUp {
    padding-right: 10px;
  }

  .charts {
    display: inline-block;
  }
</style>

<!-- include footer -->
<%- include('include/_footer') %>
<!-- /include footer -->
